#!/bin/bash

version=pg

function status() {
    client_result $pwd
	ps -C postgres > /dev/null
    if [ "$?" -eq "0" ];
	then client_result "$version is running"; 
		client_result "  Connect to $version using:  psql -U $OPENSHIFT_GEAR_UUID -h 127.0.0.1 -p $PG_PORT template1";
	else client_result "$version is not running"; 
    fi

}

function use-source() {
    if ! [ $# -gt 0 ]; then
        echo "Usage: $0 git-repository-url [commit]"
        return 1
    fi
    set -e
    stop
    mkdir -p $TMP/_env/
    rm -rf $TMP/_env/*
    cp env/* $TMP/_env/
    rm -rf .??* *
    if [ -n $2 ]; then
        echo "Switching to using source from $1, commit $2"
        git clone $1 -b $2 .
    else
        echo "Switching to using source from $1"
        git clone $1 .
    fi
    mkdir -p env
    cp $TMP/_env/* env/
    
    bin/setup
}

function update() {
    stop
    ./.openshift/action_hooks/build
}

function start() {
# start the tunnels if this is a master or standby configuration of postgres
	if [ -n "$PG_NODE_TYPE" ]; then
		$OPENSHIFT_PG_DIR/bin/create-tunnel.sh	
	fi

	client_result "starting postgres...."	
	ps -C postgres > /dev/null
    if [ "$?" -eq "0" ];
	then client_result "$version is running already...run stop first"; 
	else client_result "$version is not running...starting it now"; 
		nohup pg_ctl -D $OPENSHIFT_DATA_DIR/.$version/data start &> /tmp/pg-startup.out;	
    fi

	if [ "$PG_NODE_TYPE" == "master" ]; then
		client_result "this is a master...we are granting replication to user";
		sleep 10
		$OPENSHIFT_PG_DIR/bin/grant.sh;
	fi

}


function stop() {
	if [ -n "$PG_NODE_TYPE" ]; then
		$OPENSHIFT_PG_DIR/bin/stop-tunnel.sh	
	fi
	client_result "stopping postgres...."	
	ps -C postgres > /dev/null
    if [ "$?" -eq "0" ];
	then client_result "$version is running ...issuing stop "; 
		pg_ctl -m fast -D $OPENSHIFT_DATA_DIR/.$version/data stop;	
	else client_result "$version is not running..."; 
    fi

    return 1
}

function restart() {
    if (stop); then
        start
    else
        start
    fi
}

function build() {
    echo
}

function post-deploy() {
    echo
}

function pre-build() {
    echo
}

function tidy() {
    echo
}

#
#  main():
#

# Ensure arguments.
if ! [ $# -gt 0 ]; then
    echo "Usage: $0 [start|restart|graceful|graceful-stop|stop|status|update|use-source]"
    exit 1
fi

# Source utility functions.
source $OPENSHIFT_CARTRIDGE_SDK_BASH

# Handle commands.
case "$1" in
    start)               start       ;;
    restart|graceful)    restart     ;;
    graceful-stop|stop)  stop        ;;
    status)              status      ;;
    build)               build       ;;
    pre-build)           pre-build   ;;
    post-deploy)         post-deploy ;;
    tidy)                tidy        ;;
    update)              update      ;;
    use-source)          use-source  $2 $3 ;;
    *)
esac
